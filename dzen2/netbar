#!/bin/bash

# for labels such as MPD, SYS ...
LABELCOL="#fffafa"
LABELWRAPCOL="#333332"
# for all dynamic information read from system
INFOCOL="#C0C0C0"
# for tags such as cpu, mem ...
TAGCOL="#deb887"
# for symbols such as mB, % ...
SYMCOL="#9d9d9d"
# bar color
BGCOL="#303030"
# bar text color
FGCOL="#707070"
#wrapper color
WRAPCOL="#1a1a1b"

# icons
DOWNICON="^i(/home/cas/stumpwm/dzen2/icons/down.xbm)"
UPICON="^i(/home/cas/stumpwm/dzen2/icons/up.xbm)"
LCOR="^i(/home/cas/stumpwm/dzen2/icons/myicons/corner-left.xbm)"
RCOR="^i(/home/cas/stumpwm/dzen2/icons/myicons/corner-right.xbm)"


# update every second
UPDATE=1

# for switching between displaying different info
COUNT=0

function pad { 
    C=0
    while [ "$C" -lt $1 ]; do
	echo -n " "
	C=$(( $C + 1 ))
    done
    echo -n "^bg()"
}

# echo modules with content, uses pad() to keep
# syntax: ouputinfo stringAsItWillAppear stringFormatted moduleLength
function outputinfo {
        STRLEN=$(expr length "$1" )
	PAD=$(( $3 - $STRLEN ))
	echo -n "^fg($WRAPCOL)$LCOR^fg()^bg($WRAPCOL)$2^fg()"
	pad $PAD
	echo -n "^bg()^fg($WRAPCOL)$RCOR"
}

sleep 2
while :;  do

    # Internet
    CON=0
    ETH0=$(ip -o addr | grep "eth0.*inet " | awk '{print $2}' | sed -e 's/\/.*//g')
    WLAN0=$(ip -o addr | grep "wlan0.*inet " | awk '{print $2}' | sed -e 's/\/.*//g')
    if [ "$ETH0" != "" ] 
	then {
		CON="$ETH0";
		CONICON="eth0";}
		INTERFACE=eth0
    elif [ "$WLAN0" != "" ]
         then {
		CON="$WLAN0";
		CONICON="wlan0";}
		INTERFACE="wlan0"
    else CON="offline"; 
    fi
	
    RXB=`cat /sys/class/net/$INTERFACE/statistics/rx_bytes`
    TXB=`cat /sys/class/net/$INTERFACE/statistics/tx_bytes`
    TOTALDOWN=$(echo "($RXB) / 1024 / 1024 / 1024" | bc -l | xargs printf "%.3f")
    TOTALUP=$(echo "($TXB) / 1024 / 1024 / 1024" | bc -l | xargs printf "%.3f")

    sleep $UPDATE

    RXBN=`cat /sys/class/net/$INTERFACE/statistics/rx_bytes`
    TXBN=`cat /sys/class/net/$INTERFACE/statistics/tx_bytes`
	
    RXR=$(echo "( $RXBN - $RXB ) / 1024" | bc -l | xargs printf "%.1f")
    TXR=$(echo "( $TXBN - $TXB ) / 1024" | bc -l | xargs printf "%.1f")
    
    echo -n "^fg($LABELWRAPCOL)$LCOR^bg($LABELWRAPCOL)^fg($LABELCOL)NET:^bg()^fg($LABELWRAPCOL)$RCOR" # main label
    
    # switch between displaying if, dl and ul (2 secs each)
    case $COUNT in

	[0-1]) outputinfo "If: $CON" "^fg($TAGCOL)If:^fg() ^fg($INFOCOL)$CON" 14
	       ;;
	[2-3]) outputinfo "Dl: $TOTALDOWN"gB"" "^fg($TAGCOL)Dl:^fg() ^fg($INFOCOL)$TOTALDOWN^fg($SYMCOL)gB" 14
	       ;;
	[4-5]) outputinfo "Ul: $TOTALUP"gB"" "^fg($TAGCOL)Ul:^fg() ^fg($INFOCOL)$TOTALUP^fg($SYMCOL)gB" 14
	       ;;
    esac
    if [ "$COUNT" = "5" ]; then
	COUNT=0
    else
	COUNT=$(( $COUNT + 1 ))
    fi
    
    #ignore icon in stringasitwillappear, as it has enough spacing...
    outputinfo "$RXR"kB/s"" "^fg($TAGCOL)$DOWNICON^fg() ^fg($INFOCOL)$RXR^fg()^fg($SYMCOL)kB/s^fg()" 11

    outputinfo "$RXR"kB/s"" "^fg($TAGCOL)$UPICON^fg() ^fg($INFOCOL)$TXR^fg()^fg($SYMCOL)kB/s^fg()" 11


    # newline, as required by dzen2
    echo ""

    RXB=$RXBN; TXB=$TXBN

done | dzen2 -x 729 -y 1034 -h 12 -w 412 -ta l -fg $FGCOL -bg $BGCOL -fn "-*-dejavu sans mono-extralight-r-*-*-9-*-*-*-*-*-*-*"
